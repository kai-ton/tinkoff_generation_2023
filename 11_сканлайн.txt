Задача A: Объединение отрезков

#include <iostream>
#include <vector>
#include <algorithm>

int main() {
    int n, a, b, x;
    std::cin >> n;
    std::vector<std::vector<int>> v(2 * n, std::vector<int>(2));
    std::vector<std::vector<int>> v1(n, std::vector<int>(2));
    for (int i = 0; i < 2 * n; i += 2) {
        std::cin >> a;
        v[i][0] = a;
        v[i][1] = -1;
        std::cin >> a;
        v[i + 1][0] = a;
        v[i + 1][1] = 1;
    }
    sort(v.begin(), v.end());
    x = 0;
    a = 0;
    b = -1;
    for (int i = 0; i < 2 * n; i++) {
        if (v[i][1] == -1) {
            if (b == -1) {
                b = v[i][0];
            }
            a += 1;
        } else {
            a -= 1;
            if (a == 0) {
                v1[x][0] = b;
                v1[x][1] = v[i][0];
                x += 1;
                b = -1;
            }
        }
    }
    std::cout << x << '\n';
    for (int i = 0; i < x; i++) {
        std::cout << v1[i][0] << " " << v1[i][1] << '\n';
    }
}



Задача B: Точки и отрезки

#include <iostream>
#include <vector>
#include <algorithm>

int main() {
    int n, m, a, b, x;
    std::cin >> n >> m;
    std::vector<std::vector<int>> v(2 * n + m, std::vector<int>(2));
    std::vector<int> v1(m);
    for (int i = 0; i < 2 * n; i += 2) {
        std::cin >> a;
        std::cin >> b;
        if (a <= b) {
            v[i][0] = a;
            v[i + 1][0] = b;
        } else {
            v[i][0] = b;
            v[i + 1][0] = a;
        }
        v[i][1] = -99999;
        v[i + 1][1] = 99999;
    }
    b = 0;
    for (int i = 2 * n; i < 2 * n + m; i++) {
        std::cin >> a;
        v[i][0] = a;
        v[i][1] = b;
        v1[b] = a;
        b += 1;
    }
    sort(v.begin(), v.end());
    x = 0;
    a = 0;
    b = 0;
    for (int i = 0; i < 2 * n + m; i++) {
        if (v[i][1] == -99999) {
            a += 1;
        } else {
            if (v[i][1] == 99999) {
            a -= 1;
        } else {
            v1[v[i][1]] = a;
            }
        }
    }
    for (int i = 0; i < m; i++) {
        std::cout << v1[i] << " ";
    }
}



Задача C: Кассы

#include <bits/stdc++.h>

int main() {
    int n, x, x1, a, na, ko, otv, c;
    std::cin >> n;
    std::vector<std::vector<int>> v;
    std::vector<int> v1(2);
    c = 0;
    for (int i = 0; i < n; i++) {
        x = 0;
        std::cin >> a;
        x += a * 3600;
        std::cin >> a;
        x += a * 60;
        std::cin >> a;
        x += a * 1;
        x1 = 0;
        std::cin >> a;
        x1 += a * 3600;
        std::cin >> a;
        x1 += a * 60;
        std::cin >> a;
        x1 += a * 1;
        if (x1 == x) {
            continue;
        }
        c += 1;
        if (x <= x1) {
            v1[0] = x;
            v1[1] = -1;
            v.push_back(v1);
            v1[0] = x1;
            v1[1] = 1;
            v.push_back(v1);
        } else {
            v1[0] = 0;
            v1[1] = -1;
            v.push_back(v1);
            v1[0] = x1;
            v1[1] = 1;
            v.push_back(v1);

            v1[0] = x;
            v1[1] = -1;
            v.push_back(v1);
            v1[0] = 24 * 60 * 60;
            v1[1] = 1;
            v.push_back(v1);
        }
    }
    if (c != 0) {
    sort(v.begin(), v.end());
    a = 0;
    otv = 0;
    na = -1;
    for (int i = 0; i < v.size(); i++) {
        if (v[i][1] == -1) {
            a += 1;
            if (a == c) {
                na = v[i][0];
            }
        } else {
            a -= 1;
            if (a == c - 1) {
                ko = v[i][0];
                otv += ko - na;
                na = -1;
            }
        }
    }
    std::cout << otv;
    } else {
        std::cout << 24 * 60 * 60;
    }
}



Задача F: Решаем контест

#include <iostream>
#include <vector>
#include <algorithm>

int main() {
    long long n, a, sf, sd;
    sf = 0;
    sd = 0;
    std::cin >> n;
    std::vector<int> t(n);
    for (int i = 0; i < n; i++) {
        std::cin >> a;
        t[i] = a;
        std::cin >> a;
        sd += a;
    }
    sort(t.begin(), t.end());
    for (int i = 0; i < n; i++) {
        sf += t[i] * (n - i);
    }
    std::cout << sd - sf;
}



